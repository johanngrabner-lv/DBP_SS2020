##https://www.db-fiddle.com/

SQl-Wiederholung

--DDL Data Definition Language
---> Objekte (Tabellen) erzeugen, löschen, verändern

CREATE TABLE Kunden
(
    Firstname VARCHAR(50),
    Plz int,
    Geschlecht VARCHAR(1)
)

DROP TABLE Kunden
ALTER TABLE

DML - Data Manipulation Language
INSERT INTO Kunden(Firstname, Geschlecht, Plz)
VALUES('Hans','M',8010);

DQL
SELECT PLZ, Geschlecht, Firstname FROM Kunden;

INSERT INTO Kunden VALUES('Maria',1010,'W');

SELECT PLZ, Geschlecht, Firstname FROM Kunden;

UPDATE Kunden
SET Firstname='Johann', Plz=5020
WHERE Firstname='Hans';

SELECT * FROM Kunden;


SELECT * FROM Kunden;

1. Normalform
enthält Wiederholungen, enthält transitive Abhängigkeiten
-Jede Zeile muss eindeutig identifizierbar - Primary Key, Unique -- rowid
-Atomar Strasse: "Hauptplatz 17"
Strasse:"Hauptplatz", Hausnummer: "17"

2. Normalform
Telefonnummer '+43 650 223423423'
Wiederholungsgruppen
Tel1: 0316, Tel2: 065, Tel3: 0664

Telefonnummern
CREATE  TABLE  Telefonnummern
(
    --- rowid PK
    --- Fremdschlüssel -- PK-Spalte der 1-Seite
    KundenNrFK int,
    Telefonart varchar(20),
    Telefonnummer varchar(20)
 )

 INSERT INTO Telefonnummern VALUES(1,'privat','0316');
 INSERT INTO Telefonnummern VALUES(2,'business','0650');
 INSERT INTO Telefonnummern VALUES(2,'privat','0676');

 SELECT * FROM Telefonnummern
 WHERE KundenNrFK=1;


 -- Variante a
 SELECT Firstname, Telefonnummer
 FROM Kunden k -- k ist ein alias
 JOIN Telefonnummern t --t ist ein alias
 ON k.rowid = t.KundenNrFK; --welche Spalten stehen in Beziehung

 --Variante b
 SELECT Firstname, Telefonnummer
 FROM Kunden k, -- k ist ein alias
 Telefonnummern t --t ist ein alias
 WHERE k.rowid = t.KundenNrFK; --welche Spalten stehen in


 DELETE FROM Kunden
 WHERE Firstname='Johann';


--3. Normalform - Transitive Abhängigkeiten

1 Hans 2 Prämiumkunde
2 Maria 1 Superkunde
3 Elisa 2 Prämiumkunde
4 Karl 1 Superkunde

1 Hans 2
2 Maria 1
3 Elisa 2
4 Karl 1

1 - Seite
1 Prämiumkunde
2 Superkunde

















3. Normalform --- transitive Abhängigkeiten


Aufgabe - DB Design - Produktverwaltung

Nr Bez  Preis Tags                Kategorie
1 Handy 300 Blau Metalic Glänzend Telekommunikation
2 Drucker 150 Tinte Bürobedarf
3 Kugelschreiber 5 Rot farbecht Bürobedarf
4 Modem 150 High Speed Weiß Telekommunikation

1.) Tabellen-Design
2.) CREATE TABLE Statments
3.) DML Statements (Insert, Update, Delete, Select inkl. Join)


13:30 Uhr Auflösung

Produkte
(rowid) -- PK
Bezeichnung (String/ Text)
Preis (Zahl)
ProdKatIdFk -- Foreign Key ProduktKategorien(rowid)

ProduktEigenschaften
(rowid) -- PK
ProduktIdFk -- Foreign Key Produkte(rowid)
Eigenschaft (String)

ProduktKategorien
(rowid) PK
Kategorie

DDL
CREATE TABLE Produkte
(
    Bezeichnung varchar(50),
    Preis real,
    ProdKatIdFk int -- FK Constraints

)

CREATE TABLE ProduktEigenschaften
(
    ProduktIdFk int, -- Constraint
    Eigenschaft varchar(50)
)

CREATE TABLE ProduktKategorien
(
    Kategorie varchar(50)
)









